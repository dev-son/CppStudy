#pragma once


/// 전방 선언
class Player; // 클래스 플레이어가 나중에 등장 할거니까 알고있어라!
class Field; // 헤더 파일에서 포인터로 들고있으면 클래스 전방 선언 해준다.

// is - a 게임이 플레이어에 있냐? 상속관계가 아니다
// 
// has -a 게임이 플레이어를 가지고 있냐 oo 포함관계
// 게임의 설계도를 완성하려면 플레이어 설계도가 완성해야한다. 
// 플레이어의 설계도를 완성하기 위해서 만약에 game.h에 플레이어가 헤더가 필요하면
// 무조건 실패하게 된다 죽음의 다이아몬드 라고 한다.
class Game
{
public:
	Game();
	~Game();

	void Init();
	void Update();

	void CreatePlayer();
private:


	///Player _player;		// 멤버 클래스로 들고있는것
	// 나중에가면 플레이어로 들고있으면 나이트 , 아쳐 , 메이지를 저장할수 없게 된다.
	// 원본 데이터 자체의 의미를 가지게됨

	// 포인터는 그냥 주소 바구니 4 or 8 바이트가 됨. 주소값만 가지게 되는것
	Player* _player;	// 멤버 클래스의 포인터로 들고있는것
	// 포인터로 들고있냐 아니냐로 의미가 완전히 달라진다.

	// 포인터로 들고있다는 의미는 주소 바구니 가 된다. 
	// 포인터 형태로 만들어줄때 클래스 전방선언 해야된다.

	Field* _field;
};

